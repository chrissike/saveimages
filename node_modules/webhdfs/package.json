{
  "_args": [
    [
      {
        "raw": "webhdfs@git://github.com/mgaesslein/webhdfs.git",
        "scope": null,
        "escapedName": "webhdfs",
        "name": "webhdfs",
        "rawSpec": "git://github.com/mgaesslein/webhdfs.git",
        "spec": "git://github.com/mgaesslein/webhdfs.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:mgaesslein/webhdfs.git",
          "sshUrl": "git+ssh://git@github.com/mgaesslein/webhdfs.git",
          "httpsUrl": "git+https://github.com/mgaesslein/webhdfs.git",
          "gitUrl": "git://github.com/mgaesslein/webhdfs.git",
          "shortcut": "github:mgaesslein/webhdfs",
          "directUrl": "https://raw.githubusercontent.com/mgaesslein/webhdfs/master/package.json"
        }
      },
      "/home/chrissi/vsc_workspace/imageupload"
    ]
  ],
  "_from": "git://github.com/mgaesslein/webhdfs.git",
  "_id": "webhdfs@1.1.1",
  "_inCache": true,
  "_location": "/webhdfs",
  "_phantomChildren": {},
  "_requested": {
    "raw": "webhdfs@git://github.com/mgaesslein/webhdfs.git",
    "scope": null,
    "escapedName": "webhdfs",
    "name": "webhdfs",
    "rawSpec": "git://github.com/mgaesslein/webhdfs.git",
    "spec": "git://github.com/mgaesslein/webhdfs.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:mgaesslein/webhdfs.git",
      "sshUrl": "git+ssh://git@github.com/mgaesslein/webhdfs.git",
      "httpsUrl": "git+https://github.com/mgaesslein/webhdfs.git",
      "gitUrl": "git://github.com/mgaesslein/webhdfs.git",
      "shortcut": "github:mgaesslein/webhdfs",
      "directUrl": "https://raw.githubusercontent.com/mgaesslein/webhdfs/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/mgaesslein/webhdfs.git#768d3e38bab429829bc9338cda6db48ec26c08e9",
  "_shasum": "c1beb75943a9ee2683025b00fdaa689d1a03db46",
  "_shrinkwrap": null,
  "_spec": "webhdfs@git://github.com/mgaesslein/webhdfs.git",
  "_where": "/home/chrissi/vsc_workspace/imageupload",
  "author": {
    "name": "me"
  },
  "bugs": {
    "url": "https://github.com/cr33p/webhdfs/issues"
  },
  "dependencies": {
    "buffer-stream-reader": "^0.1.1",
    "extend": "^3.0.0",
    "request": "^2.74.0"
  },
  "description": "Node.js WebHDFS REST API client",
  "devDependencies": {
    "mocha": "^2.3.3",
    "must": "^0.13.1",
    "sinon": "^1.17.2",
    "webhdfs-proxy": "^0.1.2",
    "webhdfs-proxy-memory": "^0.1.2"
  },
  "gitHead": "768d3e38bab429829bc9338cda6db48ec26c08e9",
  "homepage": "https://github.com/cr33p/webhdfs#readme",
  "keywords": [
    "webhdfs",
    "hadoop",
    "big data",
    "fs",
    "storage"
  ],
  "license": "MIT",
  "main": "lib/webhdfs.js",
  "name": "webhdfs",
  "optionalDependencies": {},
  "readme": "node-webhdfs\n============\n\n[![Build Status](https://travis-ci.org/harrisiirak/webhdfs.png?branch=master)](https://travis-ci.org/harrisiirak/webhdfs)\n[![NPM version](https://badge.fury.io/js/webhdfs.png)](http://badge.fury.io/js/webhdfs)\n\n\nHadoop WebHDFS REST API (2.2.0) client library for node.js with `fs` module like (asynchronous) interface.  \n\n## Examples\n\nWriting to the remote file:\n\n```javascript\nvar WebHDFS = require('webhdfs');\nvar hdfs = WebHDFS.createClient();\n\nvar localFileStream = fs.createReadStream('/path/to/local/file');\nvar remoteFileStream = hdfs.createWriteStream('/path/to/remote/file');\n\nlocalFileStream.pipe(remoteFileStream);\n\nremoteFileStream.on('error', function onError (err) {\n  // Do something with the error\n});\n\nremoteFileStream.on('finish', function onFinish () {\n  // Upload is done\n});\n```\n\nReading from the remote file:\n\n```javascript\nvar WebHDFS = require('webhdfs');\nvar hdfs = WebHDFS.createClient({\n  user: 'webuser',\n  host: 'localhost',\n  port: 80,\n  path: '/webhdfs/v1'\n});\n\nvar remoteFileStream = hdfs.createReadStream('/path/to/remote/file');\n\nremoteFileStream.on('error', function onError (err) {\n  // Do something with the error\n});\n\nremoteFileStream.on('data', function onChunk (chunk) {\n  // Do something with the data chunk\n});\n\nremoteFileStream.on('finish', function onFinish () {\n  // Upload is done\n});\n```\n\n## TODO\n\n* Implement all calls (GETCONTENTSUMMARY, GETFILECHECKSUM, GETHOMEDIRECTORY, GETDELEGATIONTOKEN, RENEWDELEGATIONTOKEN, CANCELDELEGATIONTOKEN, SETREPLICATION, SETTIMES)\n* Improve documentation\n* More examples\n\n# Tests\n\nRunning tests:\n\n```bash\nnpm test\n```\n\n# License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cr33p/webhdfs.git"
  },
  "scripts": {
    "test": "mocha --reporter spec test/"
  },
  "version": "1.1.1"
}
